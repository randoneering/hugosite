<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 04 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FreshRSS, but using Docker Compose</title>
      <link>/blog/freshrssdocker/</link>
      <pubDate>Tue, 04 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/freshrssdocker/</guid>
      <description>This is a quick one To prove a point, and make it &amp;ldquo;easier&amp;rdquo;, you could just use docker and run FreshRSS that way. It takes less time, honestly, and less complicated. So, why not:
Oh, linuxserver.io, how I adore you I went with the instructions and image curated by linuxserver.io:
https://docs.linuxserver.io/images/docker-freshrss
This cuts out a lot of the work, and actually setups up a cronjob to refresh your feeds automatically. No fussing around with systemd or crontabs yourself.</description>
    </item>
    
    <item>
      <title>FreshRSS RSS Feed Aggregator</title>
      <link>/blog/freshrss/</link>
      <pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/freshrss/</guid>
      <description>I love RSS If you are like me and love RSS, I highly recommend hosting your own RSS Feed aggregator. A fellow community member in the TechnoTim discord (Thanks Blade) introduced me to FressRSS. It is free, lightweight, relatively easy to work with, and fully customizable. Though, it seems I like to do things the &amp;ldquo;hard way&amp;rdquo; and decided against using the docker image. So if you are looking for the fire and forget method you get with docker, then you are in the wrong place.</description>
    </item>
    
    <item>
      <title>Basic MariaDB Install Playbook</title>
      <link>/blog/mariadbplaybook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/mariadbplaybook/</guid>
      <description>Getting Down to the Basics This will be an ongoing task and is in a private repo currently. However, I wanted to share the core of the playbook here. Check back periodically where I will make adjustments to include other best practices. Once I feel like this is in a solid state, I will open up the github repo for easy of use.
Before You Copy Pasta Notice the variables-you will need to add your own vars file, inventory file, and your ansible.</description>
    </item>
    
    <item>
      <title>Upgraded SOL</title>
      <link>/blog/upgradedsol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/upgradedsol/</guid>
      <description>As a true homelab enthusiast, I decided to swap out the middle fans of my supermicro 826 server chassis and the two X5860s with two L5640s. For months, I have left my lab running, but barely using the 20+ cores and 128GB of RAM I have in the box. Paired with a 1000w power supply, I was feeling pretty guilty having this old server sucking power and it not going to good use.</description>
    </item>
    
    <item>
      <title>When Two Weather Stations Walk Into A Bar</title>
      <link>/blog/weatherstation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/weatherstation/</guid>
      <description>Davis Vantage Pro2 Acquired
A few years ago, my wife&amp;rsquo;s grandfather gifted me a Davis Vantage Pro2 weather station. Originally, he was given this weather station by one of his sons who was deployed on active duty in the Middle East shortly after 9/11. This specific weather station was used at his post and when his deployment ended, and the station was gearing down, his son packed up the weather station.</description>
    </item>
    
  </channel>
</rss>
